/**
 * OpenParty API
 * Move your app forward with the OpenParty API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenPartyApi);
  }
}(this, function(expect, OpenPartyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenPartyApi.Venue();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Venue', function() {
    it('should create an instance of Venue', function() {
      // uncomment below and update the code to test Venue
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be.a(OpenPartyApi.Venue);
    });

    it('should have the property venueId (base name: "venue_id")', function() {
      // uncomment below and update the code to test the property venueId
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueType (base name: "venue_type")', function() {
      // uncomment below and update the code to test the property venueType
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueTitle (base name: "venue_title")', function() {
      // uncomment below and update the code to test the property venueTitle
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueDisplayTitle (base name: "venue_display_title")', function() {
      // uncomment below and update the code to test the property venueDisplayTitle
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueDescription (base name: "venue_description")', function() {
      // uncomment below and update the code to test the property venueDescription
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueFeatures (base name: "venue_features")', function() {
      // uncomment below and update the code to test the property venueFeatures
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venuePolicy (base name: "venue_policy")', function() {
      // uncomment below and update the code to test the property venuePolicy
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property neighborhood (base name: "neighborhood")', function() {
      // uncomment below and update the code to test the property neighborhood
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property addressStreet (base name: "address_street")', function() {
      // uncomment below and update the code to test the property addressStreet
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property addressCity (base name: "address_city")', function() {
      // uncomment below and update the code to test the property addressCity
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property addressState (base name: "address_state")', function() {
      // uncomment below and update the code to test the property addressState
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property addressPostalCode (base name: "address_postal_code")', function() {
      // uncomment below and update the code to test the property addressPostalCode
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property addressCountry (base name: "address_country")', function() {
      // uncomment below and update the code to test the property addressCountry
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property temporarilyClosed (base name: "temporarily_closed")', function() {
      // uncomment below and update the code to test the property temporarilyClosed
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property operatingHours (base name: "operating_hours")', function() {
      // uncomment below and update the code to test the property operatingHours
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property operatingHoursList (base name: "operating_hours_list")', function() {
      // uncomment below and update the code to test the property operatingHoursList
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property checkInTime (base name: "check_in_time")', function() {
      // uncomment below and update the code to test the property checkInTime
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueAreaSize (base name: "venue_area_size")', function() {
      // uncomment below and update the code to test the property venueAreaSize
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property capacity (base name: "capacity")', function() {
      // uncomment below and update the code to test the property capacity
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property ageMinimum (base name: "age_minimum")', function() {
      // uncomment below and update the code to test the property ageMinimum
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property crowdType (base name: "crowd_type")', function() {
      // uncomment below and update the code to test the property crowdType
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property dressCode (base name: "dress_code")', function() {
      // uncomment below and update the code to test the property dressCode
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property priceRating (base name: "price_rating")', function() {
      // uncomment below and update the code to test the property priceRating
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property musicGenres (base name: "music_genres")', function() {
      // uncomment below and update the code to test the property musicGenres
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueRooms (base name: "venue_rooms")', function() {
      // uncomment below and update the code to test the property venueRooms
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueFacebook (base name: "venue_facebook")', function() {
      // uncomment below and update the code to test the property venueFacebook
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueInstagram (base name: "venue_instagram")', function() {
      // uncomment below and update the code to test the property venueInstagram
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueLogo (base name: "venue_logo")', function() {
      // uncomment below and update the code to test the property venueLogo
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueVideos (base name: "venue_videos")', function() {
      // uncomment below and update the code to test the property venueVideos
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

    it('should have the property venueImages (base name: "venue_images")', function() {
      // uncomment below and update the code to test the property venueImages
      //var instane = new OpenPartyApi.Venue();
      //expect(instance).to.be();
    });

  });

}));
