/**
 * OpenParty API
 * Move your app forward with the OpenParty API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Error', 'model/Event'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Error'), require('../model/Event'));
  } else {
    // Browser globals (root is window)
    if (!root.OpenPartyApi) {
      root.OpenPartyApi = {};
    }
    root.OpenPartyApi.EventApi = factory(root.OpenPartyApi.ApiClient, root.OpenPartyApi.Error, root.OpenPartyApi.Event);
  }
}(this, function(ApiClient, Error, Event) {
  'use strict';

  /**
   * Event service.
   * @module api/EventApi
   * @version 1.0.0
   */

  /**
   * Constructs a new EventApi. 
   * @alias module:api/EventApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the eventsGet operation.
     * @callback module:api/EventApi~eventsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Event>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Events By Venue and Date
     * The Venues endpoint returns information about a venue by given id. The response includes the display name and other details about the venue.
     * @param {Date} _date Date for event.
     * @param {Object} opts Optional parameters
     * @param {String} opts.venue Id for the venue.
     * @param {module:api/EventApi~eventsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Event>}
     */
    this.eventsGet = function(_date, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter '_date' is set
      if (_date == undefined || _date == null) {
        throw new Error("Missing the required parameter '_date' when calling eventsGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'date': _date,
        'venue': opts['venue']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [Event];

      return this.apiClient.callApi(
        '/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
